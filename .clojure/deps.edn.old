;; The deps.edn file describes the information needed to build a classpath.
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{;; Paths
 ;;   Directories in the current project to include in the classpath

 ;; :paths ["src"]

 ;; External dependencies

 ;; :deps {
 ;;   org.clojure/clojure {:mvn/version "1.9.0"}
 ;; }

 ;; Aliases
 ;;   resolve-deps aliases (-R) affect dependency resolution, options:
 ;;     :extra-deps - specifies extra deps to add to :deps
 ;;     :override-deps - specifies a coordinate to use instead of that in :deps
 ;;     :default-deps - specifies a coordinate to use for a lib if one isn't found
 ;;   make-classpath aliases (-C) affect the classpath generation, options:
 ;;     :extra-paths - vector of additional paths to add to the classpath
 ;;     :classpath-overrides - map of lib to path that overrides the result of resolving deps

 ;; :aliases {
 ;;   :deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.2.196"}}}
 ;;   :test {:extra-paths ["test"]}
 ;; }

 :aliases
 {:1.9          {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
  :1.10         {:override-deps {org.clojure/clojure {:mvn/version "1.10.0"}}}
  :1.10.1       {:override-deps {org.clojure/clojure {:mvn/version "1.10.1"}}}
  :bench        {:extra-deps {criterium/criterium {:mvn/version "0.4.6"}
                              com.taoensso/tufte  {:mvn/version "2.2.0"}}}
  :check        {:extra-deps {athos/clj-check {:git/url "https://github.com/athos/clj-check.git"
                                               :sha     "cd1f25456de5eebda0a69602dd3445905382b3a4"}}
                 :main-opts  ["-m" "clj-check.check"]}
  :cljfmt       {:extra-deps {com.jameslaverack/cljfmt-runner
                              {:git/url "https://github.com/JamesLaverack/cljfmt-runner"
                               :sha     "6383fbb0bd22a21c0edf5b699425504d9f0a958a"}}
                 :main-opts  ["-m" "cljfmt-runner.check"]}
  :cljfmt/fix   {:main-opts ["-m" "cljfmt-runner.fix"]}
  :cljs-test    {:extra-deps {olical/cljs-test-runner {:mvn/version "3.7.0"}}
                 :main-opts  ["-m" "cljs-test-runner.main"]}

  :dev          {:extra-paths ["dev"]}
  ;; - see https://github.com/clojure-expectations/expectations
  ;; - and https://github.com/clojure-expectations/clojure-test
  ;; - run your expectations: clj -A:test:expect:runner
  :expect       {:extra-deps {expectations/expectations {:mvn/version "RELEASE"}
                              expectations/clojure-test {:mvn/version "RELEASE"}}}

  :find-deps    {:extra-deps {find-deps/find-deps
                              {:git/url "https://github.com/hagmonk/find-deps"
                               :sha     "9bf23a52cb0a8190c9c2c7ad1d796da802f8ce7a"}}
                 :main-opts  ["-m" "find-deps.core"]}
  ;; clojure -M:test/kaocha
  :kaocha       {:extra-paths ["test"]
                 :extra-deps  {lambdaisland/kaocha {:mvn/version "1.0.700"}}
                 :main-opts   ["-m" "kaocha.runner"]}

  :kondo        {:extra-deps {clj-kondo/clj-kondo {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "clj-kondo.main" "--lint" "src"]}

  ;; clojure -M:test/kaocha-cljs
  :kaocha-cljs  {:extra-paths ["test"]
                 :extra-deps  {lambdaisland/kaocha      {:mvn/version "1.0.700"}
                               lambdaisland/kaocha-cljs {:mvn/version "1.0.71"}}
                 :main-opts   ["-m" "kaocha.runner"]}

  ;; - see https://github.com/clojure-goes-fast/clj-memory-meter
  ;; - (require '[clj-memory-meter.core :as mm])
  ;; - (mm/measure (your-expression))
  :measure      {:extra-deps {com.clojure-goes-fast/clj-memory-meter {:mvn/version "RELEASE"}}}
  ;; project creation from templates:
  ;; - see https://github.com/seancorfield/clj-new
  ;; - create an application project:
  ;;   - clj -A:new app myname/myapp
  ;;   - cd myapp
  ;;   - clj -m myname.myapp # run it!
  ;;   - clj -A:test:runner # run the tests!
  ;; - create a library project:
  ;;   - clj -A:new lib myname/my-cool-lib
  ;;   - cd my-cool-lib
  ;;   - clj -A:test:runner # run the tests!
  :new          {:extra-deps {seancorfield/clj-new {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "clj-new.create"]}
  ;; REPL-related tools:
  ;; - start a modern nREPL server on a random available port:
  :nrepl        {:extra-deps {nrepl/nrepl {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "nrepl.cmdline"]}
  :outdated     {:extra-deps {antq/antq           {:mvn/version "RELEASE"}
                              org.slf4j/slf4j-nop {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "antq.core"]}
  :outdated-mvn {:extra-deps {deps-ancient/deps-ancient {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "deps-ancient.deps-ancient"]}
  :prepl        {:jvm-opts ["-Dclojure.server.prepl={:port,5556,:accept,clojure.core.server/io-prepl}"]}
  ;; - see https://github.com/bhauman/rebel-readline
  ;; - start a Rebel Readline REPL:
  :rebel        {:extra-deps {com.bhauman/rebel-readline {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "rebel-readline.main"]}
  :socket       {:jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/repl}"]}
  :test         {:extra-paths ["test"]
                 :extra-deps  {com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner.git"
                                                          :sha     "b6b3193fcc42659d7e46ecd1884a228993441182"}}
                 :main-opts   ["-m" "cognitect.test-runner"]}
  ;; uberjar building:
  ;; - see https://github.com/seancorfield/depstar for a minimalist approach:
  ;;   - clj -A:uberjar result.jar
  ;; - to run it:
  ;;   - java -cp result.jar clojure.main -m mymain.namespace
  ;; - build a library JAR:
  ;;   - clj -A:jar result-lib.jar
  :uberjar      {:extra-deps {seancorfield/depstar {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "hf.depstar.uberjar"]}
  :jar          {:extra-deps {seancorfield/depstar {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "hf.depstar.jar"]}
  ;; jar installation and deployment:
  ;; - see https://github.com/slipset/deps-deploy
  ;;   - clj -A:install project.jar
  ;;   - clj -A:deploy project.jar
  ;; - these rely on having a pom.xml file and, for deployment, these two
  ;;   environment variables: CLOJARS_USERNAME, CLOJARS_PASSWORD
  :install      {:extra-deps {deps-deploy/deps-deploy {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "deps-deploy.deps-deploy" "install"]}
  :deploy       {:extra-deps {deps-deploy/deps-deploy {:mvn/version "RELEASE"}}
                 :main-opts  ["-m" "deps-deploy.deps-deploy" "deploy"]}
  :yourkit      {:jvm-opts ["-agentpath:/Applications/YourKit-Java-Profiler-2018.04.app//Contents/Resources/bin/mac/libyjpagent.jnilib"]}

  ;; - see https://github.com/vlaaad/reveal
  :reveal       {:extra-deps {vlaaad/reveal {:mvn/version "RELEASE"}}
                 :ns-default vlaaad.reveal
                 :exec-fn    repl
                 :main-opts  ["-m" "vlaaad.reveal" "repl"]
                 :jvm-opts   ["-Dvlaaad.reveal.prefs={:theme,:light,:font-family,\"Fira Mono\",:font-size,14}"]}
  :reveal-dark  {:extra-deps {vlaaad/reveal {:mvn/version "RELEASE"}}
                 :ns-default vlaaad.reveal
                 :exec-fn    repl
                 :main-opts  ["-m" "vlaaad.reveal" "repl"]}
  :reveal-nrepl {:extra-deps {vlaaad/reveal {:mvn/version "RELEASE"}
                              nrepl/nrepl   {:mvn/version "0.8.2"}}
                 :main-opts  ["-m" "nrepl.cmdline" "--middleware" "[vlaaad.reveal.nrepl/middleware]"]}

  ;; - see https://github.com/djblue/portal
  :portal       {:extra-deps {djblue/portal {:mvn/version "RELEASE"}}}


  ;; Run debugger from CLI first
  :flow-storm   {:extra-deps {jpmonettas/flow-storm {:mvn/version "0.3.2"}}}

  :debug-repl   {:extra-deps {org.clojars.gjahad/debug-repl {:mvn/version "0.3.3"}}}
  :sayid        {:extra-deps {com.billpiel/sayid {:mvn/version "0.1.0"}}}}
 ;; Provider attributes

 ;; :mvn/repos {
 ;;   "central" {:url "https://repo1.maven.org/maven2/"}
 ;;   "clojars" {:url "https://clojars.org/repo"}
 ;; }
 }
